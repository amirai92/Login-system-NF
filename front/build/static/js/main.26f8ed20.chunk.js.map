{"version":3,"sources":["components/context/auth-context.js","components/UIElements/Backdrop.js","components/UIElements/LoadingSpinner.js","components/hooks/auth-hook.js","components/Navigation/MainHeader.js","components/Navigation/NavLinks.js","components/Navigation/SideDrawer.js","components/Navigation/MainNavigation.js","App.js","index.js"],"names":["AuthContext","createContext","isLoggedIn","userId","userIdAdmin","token","login","logout","Backdrop","props","ReactDOM","createPortal","className","onClick","document","getElementById","LoadingSpinner","asOverlay","logoutTimer","MainHeader","children","NavLinks","auth","useContext","to","exact","SideDrawer","content","CSSTransition","in","show","timeout","classNames","mountOnEnter","unmountOnExit","MainNavigation","useState","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","Fragment","Users","React","lazy","Auth","App","routes","setToken","tokenExpirationDate","setTokenExpirationDate","setUserId","useCallback","uid","expirationDate","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","removeItem","useEffect","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","path","Provider","value","fallback","render"],"mappings":"sGAAA,6CAEaA,EAAcC,wBAAc,CACvCC,YAAY,EACZC,OAAQ,KACRC,YAAa,2BACbC,MAAO,KACPC,MAAO,aACPC,OAAQ,gB,yECIKC,IAPE,SAAAC,GACf,OAAOC,IAASC,aACd,qBAAKC,UAAU,WAAWC,QAASJ,EAAMI,UACzCC,SAASC,eAAe,oB,mDCIbC,IARQ,SAAAP,GACrB,OACE,qBAAKG,UAAS,UAAKH,EAAMQ,WAAa,4BAAtC,SACE,qBAAKL,UAAU,sB,uMCLjBM,E,8DCMWC,G,MAJI,SAAAV,GACjB,OAAO,wBAAQG,UAAU,cAAlB,SAAiCH,EAAMW,a,QCkCjCC,G,MAlCE,SAACZ,GAChB,IAAMa,EAAOC,qBAAWvB,KACxB,OACE,qBAAIY,UAAU,YAAd,UACGU,EAAKpB,YACJ,6BACE,cAAC,IAAD,CAASsB,GAAG,IAAIC,OAAK,EAArB,0BAKFH,EAAKpB,YACL,6BACE,cAAC,IAAD,CAASsB,GAAG,QAAZ,4BAMc,6BAAhBF,EAAKnB,QACH,6BACE,cAAC,IAAD,CAASqB,GAAG,SAAZ,qBAILF,EAAKpB,YACJ,6BACE,wBAAQW,QAASS,EAAKf,OAAtB,2B,QCVKmB,G,MAhBI,SAAAjB,GACjB,IAAMkB,EACJ,cAACC,EAAA,EAAD,CACEC,GAAIpB,EAAMqB,KACVC,QAAS,IACTC,WAAW,gBACXC,cAAY,EACZC,eAAa,EALf,SAOE,uBAAOtB,UAAU,cAAcC,QAASJ,EAAMI,QAA9C,SAAwDJ,EAAMW,aAIlE,OAAOV,IAASC,aAAagB,EAASb,SAASC,eAAe,kB,QC6BjDoB,G,MAvCQ,SAAC1B,GAAW,IAAD,EACQ2B,oBAAS,GADjB,mBACzBC,EADyB,KACXC,EADW,KAO1BC,EAAqB,WACzBD,GAAgB,IAGlB,OACE,eAAC,IAAME,SAAP,WACGH,GAAgB,cAAC7B,EAAA,EAAD,CAAUK,QAAS0B,IACpC,cAAC,EAAD,CAAYT,KAAMO,EAAcxB,QAAS0B,EAAzC,SACE,qBAAK3B,UAAU,8BAAf,SACE,cAAC,EAAD,QAGJ,eAAC,EAAD,WACE,yBACEA,UAAU,4BACVC,QAnBkB,WACxByB,GAAgB,IAgBZ,UAIE,yBACA,yBACA,4BAEF,oBAAI1B,UAAU,yBAAd,SACE,cAAC,IAAD,CAAMY,GAAG,IAAT,oCAEF,qBAAKZ,UAAU,8BAAf,SACE,cAAC,EAAD,c,uBC1BJ6B,EAAQC,IAAMC,MAAK,kBAAM,sDACzBC,EAAOF,IAAMC,MAAK,kBAAM,gCAyDfE,EAvDH,WAAO,IAGbC,EAHY,ELdK,WAAO,IAAD,EACDV,oBAAS,GADR,mBACpB/B,EADoB,KACb0C,EADa,OAE2BX,qBAF3B,mBAEpBY,EAFoB,KAECC,EAFD,OAGCb,oBAAS,GAHV,mBAGpBjC,EAHoB,KAGZ+C,EAHY,KAKrB5C,EAAQ6C,uBAAY,SAACC,EAAK/C,EAAOgD,GACrCN,EAAS1C,GACT6C,EAAUE,GACV,IAAMJ,EACJK,GAAkB,IAAIC,MAAK,IAAIA,MAAOC,UAAY,MACpDN,EAAuBD,GACvBQ,aAAaC,QACX,WACAC,KAAKC,UAAU,CACbxD,OAAQiD,EACR/C,MAAOA,EACPuD,WAAYZ,EAAoBa,mBAGnC,IAEGtD,EAAS4C,uBAAY,WACzBJ,EAAS,MACTE,EAAuB,MACvBC,EAAU,MACVM,aAAaM,WAAW,cACvB,IA2BH,OAzBAC,qBAAU,WACR,GAAI1D,GAAS2C,EAAqB,CAChC,IAAMgB,EACJhB,EAAoBO,WAAY,IAAID,MAAOC,UAC7CrC,EAAc+C,WAAW1D,EAAQyD,QAEjCE,aAAahD,KAEd,CAACb,EAAOE,EAAQyC,IAEnBe,qBAAU,WACR,IAAMI,EAAaT,KAAKU,MAAMZ,aAAaa,QAAQ,aAEjDF,GACAA,EAAW9D,OACX,IAAIiD,KAAKa,EAAWP,YAAc,IAAIN,MAEtChD,EACE6D,EAAWhE,OACXgE,EAAW9D,MACX,IAAIiD,KAAKa,EAAWP,eAGvB,CAACtD,IAEG,CAAED,QAAOC,QAAOC,SAAQJ,UKtCUmE,GAAjCjE,EADQ,EACRA,MAAOC,EADC,EACDA,MAAOC,EADN,EACMA,OAAQJ,EADd,EACcA,OA0B9B,OAtBE2C,EADEzC,EAEA,mCACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOkE,KAAK,IAAZ,SACE,cAAC9B,EAAD,MAEF,cAAC,IAAD,CAAUjB,GAAG,eAMjB,mCACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO+C,KAAK,QAAZ,SACE,cAAC3B,EAAD,MAEF,cAAC,IAAD,CAAUpB,GAAG,eAMnB,cAAC,IAAYgD,SAAb,CACEC,MAAO,CACLvE,aAAcG,EACdA,MAAOA,EACPF,OAAQA,EACRG,MAAOA,EACPC,OAAQA,GANZ,SASE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,+BACE,cAAC,WAAD,CACEmE,SACE,qBAAK9D,UAAU,SAAf,SACE,cAACI,EAAA,EAAD,MAHN,SAOG8B,Y,MC3DbpC,IAASiE,OAAO,cAAC,EAAD,IAAS7D,SAASC,eAAe,W","file":"static/js/main.26f8ed20.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nexport const AuthContext = createContext({\n  isLoggedIn: false,\n  userId: null,\n  userIdAdmin: \"600ac50b2f18ea08293cc585\",\n  token: null,\n  login: () => {},\n  logout: () => {},\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import { useState, useCallback, useEffect } from \"react\";\n\nlet logoutTimer;\n\nexport const useAuth = () => {\n  const [token, setToken] = useState(false);\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\n  const [userId, setUserId] = useState(false);\n\n  const login = useCallback((uid, token, expirationDate) => {\n    setToken(token);\n    setUserId(uid);\n    const tokenExpirationDate =\n      expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\n    setTokenExpirationDate(tokenExpirationDate);\n    localStorage.setItem(\n      \"userData\",\n      JSON.stringify({\n        userId: uid,\n        token: token,\n        expiration: tokenExpirationDate.toISOString(),\n      })\n    );\n  }, []);\n\n  const logout = useCallback(() => {\n    setToken(null);\n    setTokenExpirationDate(null);\n    setUserId(null);\n    localStorage.removeItem(\"userData\");\n  }, []);\n\n  useEffect(() => {\n    if (token && tokenExpirationDate) {\n      const remainingTime =\n        tokenExpirationDate.getTime() - new Date().getTime();\n      logoutTimer = setTimeout(logout, remainingTime);\n    } else {\n      clearTimeout(logoutTimer);\n    }\n  }, [token, logout, tokenExpirationDate]);\n\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem(\"userData\"));\n    if (\n      storedData &&\n      storedData.token &&\n      new Date(storedData.expiration) > new Date()\n    ) {\n      login(\n        storedData.userId,\n        storedData.token,\n        new Date(storedData.expiration)\n      );\n    }\n  }, [login]);\n\n  return { token, login, logout, userId };\n};\n","import React from 'react';\n\nimport './MainHeader.css';\n\nconst MainHeader = props => {\n  return <header className=\"main-header\">{props.children}</header>;\n};\n\nexport default MainHeader;\n","import React, { useContext } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { AuthContext } from \"../context/auth-context\";\nimport \"./NavLinks.css\";\n\nconst NavLinks = (props) => {\n  const auth = useContext(AuthContext);\n  return (\n    <ul className=\"nav-links\">\n      {auth.isLoggedIn && (\n        <li>\n          <NavLink to=\"/\" exact>\n            ALL USERS\n          </NavLink>\n        </li>\n      )}\n      {!auth.isLoggedIn && (\n        <li>\n          <NavLink to=\"/auth\">AUTHENTICATE</NavLink>\n        </li>\n      )}\n\n      {\n        //Link for only admin user\n        auth.userId === \"600ac50b2f18ea08293cc585\" && (\n          <li>\n            <NavLink to=\"/admin\">Admin</NavLink>\n          </li>\n        )\n      }\n      {auth.isLoggedIn && (\n        <li>\n          <button onClick={auth.logout}>LOGOUT</button>\n        </li>\n      )}\n    </ul>\n  );\n};\n\nexport default NavLinks;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport './SideDrawer.css';\n\nconst SideDrawer = props => {\n  const content = (\n    <CSSTransition\n      in={props.show}\n      timeout={200}\n      classNames=\"slide-in-left\"\n      mountOnEnter\n      unmountOnExit\n    >\n      <aside className=\"side-drawer\" onClick={props.onClick}>{props.children}</aside>\n    </CSSTransition>\n  );\n\n  return ReactDOM.createPortal(content, document.getElementById('drawer-hook'));\n};\n\nexport default SideDrawer;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport MainHeader from \"./MainHeader\";\nimport NavLinks from \"./NavLinks\";\nimport SideDrawer from \"./SideDrawer\";\nimport Backdrop from \"../UIElements/Backdrop\";\nimport \"./MainNavigation.css\";\n\nconst MainNavigation = (props) => {\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\n\n  const openDrawerHandler = () => {\n    setDrawerIsOpen(true);\n  };\n\n  const closeDrawerHandler = () => {\n    setDrawerIsOpen(false);\n  };\n\n  return (\n    <React.Fragment>\n      {drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\n      <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\n        <nav className=\"main-navigation__drawer-nav\">\n          <NavLinks />\n        </nav>\n      </SideDrawer>\n      <MainHeader>\n        <button\n          className=\"main-navigation__menu-btn\"\n          onClick={openDrawerHandler}\n        >\n          <span />\n          <span />\n          <span />\n        </button>\n        <h1 className=\"main-navigation__title\">\n          <Link to=\"/\">Amir Aizin Task Nova</Link>\n        </h1>\n        <nav className=\"main-navigation__header-nav\">\n          <NavLinks />\n        </nav>\n      </MainHeader>\n    </React.Fragment>\n  );\n};\n\nexport default MainNavigation;\n","import React, { Suspense } from \"react\";\n//import Auth from \"./components/User/Pages/Auth\";\n//import Users from \"./components/User/Pages/Users\";\nimport MainNavigation from \"./components/Navigation/MainNavigation\";\nimport { AuthContext } from \"./components/context/auth-context\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\nimport { useAuth } from \"./components/hooks/auth-hook\";\nimport \"./App.css\";\nimport LoadingSpinner from \"./components/UIElements/LoadingSpinner\";\n\nconst Users = React.lazy(() => import(\"./components/User/Pages/Users\"));\nconst Auth = React.lazy(() => import(\"./components/User/Pages/Auth\"));\n\nconst App = () => {\n  const { token, login, logout, userId } = useAuth();\n\n  let routes;\n  if (token) {\n    routes = (\n      <>\n        <Switch>\n          <Route path=\"/\">\n            <Users />\n          </Route>\n          <Redirect to=\"/auth\" />\n        </Switch>\n      </>\n    );\n  } else {\n    routes = (\n      <>\n        <Switch>\n          <Route path=\"/auth\">\n            <Auth />\n          </Route>\n          <Redirect to=\"/auth\" />\n        </Switch>\n      </>\n    );\n  }\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn: !!token,\n        token: token,\n        userId: userId,\n        login: login,\n        logout: logout,\n      }}\n    >\n      <Router>\n        <MainNavigation />\n        <main>\n          <Suspense\n            fallback={\n              <div className=\"center\">\n                <LoadingSpinner />\n              </div>\n            }\n          >\n            {routes}\n          </Suspense>\n        </main>\n      </Router>\n    </AuthContext.Provider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}